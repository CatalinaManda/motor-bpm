apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: 'maven-publish'

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-web"

    implementation "org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter:3.4.0"
    implementation "org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-rest:3.4.0"

    implementation "org.springframework.security:spring-security-oauth2-resource-server"
    implementation "org.springframework.security:spring-security-oauth2-jose"

    implementation "$corda_group:corda-rpc:$corda_version"

    implementation "javax.json:javax.json-api:1.1.4"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.10.1"

    // runtimeOnly "org.postgresql:postgresql"
    runtimeOnly "com.h2database:h2"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.security:spring-security-test"
}

publishing {
    repositories {
        maven {
            def releasesRepoUrl = 'https://nexus.ledgertech.com/repository/lt-maven-release/'
            def snapshotsRepoUrl = 'https://nexus.ledgertech.com/repository/lt-maven-snapshot/'

            url = project.getVersion().endsWith('-SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username project.'repos.maven2.ledgertech.username'
                password project.'repos.maven2.ledgertech.password'
            }
        }
    }

    publications {
        maven(MavenPublication) {
            artifactId = "motor-bpm"
            from components.java
        }
    }
}

bootRun {
    // support passing -Dsystem.property=value to bootRun task
    systemProperties = System.properties
}
